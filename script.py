import subprocessimport osimport sysdef main(domain):    directory = domain    # Create a directory for the domain and change into it    os.makedirs(directory, exist_ok=True)    os.chdir(directory)    # List of commands to execute    commands = [        f"subfinder -silent -d {domain} -config ~/.config/subfinder/config.yaml | anew -q domains",        f"assetfinder --subs-only {domain} | anew -q domains",        f"chaos -silent -d {domain} -key '0cb3fca72f1b79ec8ff7457be2deb765a8acb5fbd0885c6b740c17edc0bff00d' | anew -q domains",        f"findomain --target {domain} --quiet | anew -q domains",        f"gau --subs {domain} | unfurl -u domains | anew -q domains",        f"waybackurls {domain} | unfurl -u domains | anew -q domains",        f"github-subdomains -d {domain} -t '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' | unfurl domains | anew -q domains",        f"crobat -s {domain} | anew -q domains",        f"cero {domain} | anew -q domains",        f"shosubgo -d {domain} -s '9udLd1dPtVRNVSu1Gh0YHJ8FxAZ4qW4X' | anew -q domains",        f"curl -sk 'http://web.archive.org/cdx/search/cdx?url=*.{domain}&output=txt&fl=original&collapse=urlkey&page=' | awk -F/ '{{gsub(/:.*/, \"\", $3); print $3}}' | sort -u | anew -q domains",        f"curl -s 'https://dns.bufferover.run/dns?q=.{domain}' | grep {domain} | awk -F, '{{gsub(\"\\\"\", \"\", $2); print $2}}' | anew -q domains",        f"curl -sk 'https://crt.sh/?q=%.{domain}&output=json' | tr ',' '\\n' | awk -F'\"' '/name_value/ {{gsub(/\\*\\./, \"\", $4); gsub(/\\\\n/,\"\\n\",$4);print $4}}' | anew -q domains",        f"curl -sk 'https://riddler.io/search/exportcsv?q=pld:{domain}' | grep -Po '(([\w.-]*)\.([\w]*)\.([A-z]))\w+' | anew -q domains",        f"curl -sk 'https://api.certspotter.com/v1/issuances?domain={domain}&include_subdomains=true&expand=dns_names' | jq .[].dns_names | grep -Po '(([\w.-]*)\.([\w]*)\.([A-z]))\w+' | anew -q domains",        f"curl -sk 'https://jldc.me/anubis/subdomains/{domain}' | grep -Po '((http|https)://)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+' | anew -q domains",        f"curl -sk 'https://api.hackertarget.com/hostsearch/?q={domain}' | unfurl domains | anew -q domains",        f"curl -sk 'https://www.threatcrowd.org/searchApi/v2/domain/report/?domain={domain}' | jq -r '.subdomains' | grep -o '\\w.*{domain}' | anew -q domains",        f"curl -sk 'https://jldc.me/anubis/subdomains/{domain}' | jq -r '.' | grep -o '\\w.*{domain}' | anew -q domains",        f"curl -sk 'https://api.threatminer.org/v2/domain.php?q={domain}&rt=5' | jq -r '.results[]' |grep -o '\\w.*{domain}' | sort -u | anew -q domains",        f"curl -sk 'https://sonar.omnisint.io/subdomains/{domain}' | cut -d '[' -f1 | cut -d ']' -f1 | cut -d '\"' -f 2 | sort -u | anew -q domains",        "cat domains | httpx -silent -sc -fhr -vhost | grep '200' | cut -d' ' -f1 | tee hosts",        "cat domains | httpx -silent -title -td -o info"    ]    # Execute each command and print its output    for command in commands:        output = run_command(command)        if output:            print(output)def run_command(command):    try:        # Capture the output of the command        result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)        if result.returncode == 0:            return result.stdout.strip()        else:            print(f"Error: {result.stderr.strip()}", file=sys.stderr)            return ""    except subprocess.CalledProcessError as e:        print(f"Error executing command: {e}", file=sys.stderr)        return ""if __name__ == "__main__":    if len(sys.argv) < 2:        print("Usage: script.py <domain>")        sys.exit(1)    main(sys.argv[1])